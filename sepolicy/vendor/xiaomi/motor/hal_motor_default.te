type hal_motor_default, domain;	
hal_server_domain(hal_motor_default, hal_motor)

type hal_motor_default_exec, exec_type, vendor_file_type, file_type;	
init_daemon_domain(hal_motor_default)

# HwBinder IPC from client to server
binder_call(hal_motor_client, hal_motor_server)

# Create HIDL interface for motor HAL
add_hwservice(hal_motor_server, hal_motor_hwservice)	
allow hal_motor_client hal_motor_hwservice:hwservice_manager find;

# Allow hal_motor_default to read and write to { motor_device hall_device }
allow hal_motor_default {
  hall_device
  motor_device
}:chr_file rw_file_perms;

# Allow hal_motor_default to create files in mnt/vendor/
allow hal_motor_default mnt_vendor_file:dir rw_dir_perms;
allow hal_motor_default mnt_vendor_file:file create_file_perms;

# Allow hal_motor_default to create files in /mnt/vendor/persist/sensors/
allow hal_motor_default vendor_persist_sensors_file:dir rw_dir_perms;
allow hal_motor_default vendor_persist_sensors_file:file create_file_perms;

# Allow hal_motor_default to communicate with xiaomiparts
binder_call(hal_motor_default, xiaomiparts)
